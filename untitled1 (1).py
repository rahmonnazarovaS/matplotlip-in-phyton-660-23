# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ld_GhOSySqSIAHaXm7I3PF_owJoIeS5d
"""

import matplotlib.pyplot as plt
import numpy as np
x=np.array([0,6])
y=np.array([0,250])
plt.plot(x,y)
plt.show()

import matplotlib.pyplot as plt
import numpy as np
y=np.array([3,8,1,10])
plt.plot(y, marker='o',ms=20, mec='r')
plt.show()

import matplotlib.pyplot as plt
import numpy as np
x1=np.array([0,1,2,3])
y1=np.array([3,8,1,10])
x2=np.array([0,1,2,3])
y2=np.array([6,2,7,11])
plt.plot(x1,y1,x2,y2)
plt.show()

import matplotlib.pyplot as plt
import numpy as np
x=np.array([0,1,2,3,4,5])
y=np.array([0,8,12,20,26,38])
plt.scatter(x,y)
plt.show()

import matplotlib.pyplot as plt
import numpy as np

t = np.linspace(0, 2, 1000)  # 2 soniyali interval, yuqori aniqlik

pulse = np.sin(2 * np.pi * 1.5 * t) * np.exp(-0.8 * t)  # Asosiy sinus to'lqin va amplituda pasayishi
pulse += 0.5 * np.sin(2 * np.pi * 8 * t) * np.exp(-1.5 * t)  # Detallar uchun kichik sinus to'lqin


pulse = np.abs(pulse) * np.sin(4 * np.pi * t)

plt.figure(figsize=(10, 4))
plt.plot(t, pulse, color="red", label="Yurak pulsining modeli")
plt.title("Yurak Pulsining Simulyatsiyasi")
plt.xlabel("Vaqt (soniya)")
plt.ylabel("Amplitude")
plt.grid()
plt.legend()
plt.show()

import matplotlib.pyplot as plt
import numpy as np

# Parametrlar
n_points = 5  # Yulduzning uchlari soni
radius_outer = 1  # Tashqi radius
radius_inner = 0.5  # Ichki radius

# Burchaklarni aniqlash
angles = np.linspace(0, 2 * np.pi, 2 * n_points + 1)

# Yulduzning tashqi va ichki nuqtalarini aniqlash
radii = np.array([radius_outer if i % 2 == 0 else radius_inner for i in range(len(angles))])

# Polar koordinatalardan x va y hisoblash
x = radii * np.cos(angles)
y = radii * np.sin(angles)

# Grafikni chizish
plt.figure(figsize=(6, 6))
plt.plot(x, y, color="blue", linewidth=2, label="Yulduz")
plt.fill(x, y, color="lightblue", alpha=0.5)
plt.title("Yulduz shakli")
plt.xlabel("X koordinatasi")
plt.ylabel("Y koordinatasi")
plt.axhline(0, color='black', linewidth=0.5, linestyle="--")
plt.axvline(0, color='black', linewidth=0.5, linestyle="--")
plt.grid()
plt.legend()
plt.axis("equal")
plt.show()